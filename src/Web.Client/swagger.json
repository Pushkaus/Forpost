{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/storage-products/{storageId}": {
      "get": {
        "tags": [
          "StorageProduct"
        ],
        "summary": "Получить список всех продуктов на складе",
        "operationId": "StorageProduct_GetAllProducts",
        "parameters": [
          {
            "name": "storageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 2
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageProductModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-products": {
      "post": {
        "tags": [
          "StorageProduct"
        ],
        "summary": "Добавить продукт на склад",
        "operationId": "StorageProduct_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageProductCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/storage-products/scan-barcode": {
      "post": {
        "tags": [
          "StorageProduct"
        ],
        "summary": "Сканирование продукта на складе",
        "operationId": "StorageProduct_ScanBarcode",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanBarcodeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/entry-storage-histories": {
      "get": {
        "tags": [
          "EntryStorageHistory"
        ],
        "summary": "Получение всех поступлений на склад",
        "operationId": "EntryStorageHistory_GetAllEntries",
        "parameters": [
          {
            "name": "Purchased",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueTupleOfIReadOnlyCollectionOfEntryStorageHistoryModelAndInteger"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/completed-products/on-storage": {
      "get": {
        "tags": [
          "CompletedProduct"
        ],
        "summary": "Список всех готовых продуктов на складе",
        "operationId": "CompletedProduct_GetAllOnStorage",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          },
          {
            "name": "filterExpression",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "filterValues",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompletedProductModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/completed-products/product/{productId}": {
      "get": {
        "tags": [
          "CompletedProduct"
        ],
        "summary": "Список готовых продуктов по ProductID (справочный ID)",
        "operationId": "CompletedProduct_GetAllOnStorageByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompletedProductModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/manufacturing-process/{manufacturingProcessId}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Получение всех задач производственного процесса",
        "operationId": "Issue_GetIssuesFromManufacturingProcess",
        "parameters": [
          {
            "name": "manufacturingProcessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueFromManufacturingProcessModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/for-executor": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Получение задач для исполнителя",
        "operationId": "Issue_GetIssuesForExecutor",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/for-responsible": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Получение задач для исполнителя",
        "operationId": "Issue_GetIssuesForResponsible",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{id}/launch": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Запуск задачи",
        "operationId": "Issue_Launch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{issueId}/assign-executor": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Назначение исполнителя задачи",
        "operationId": "Issue_AssignExecutor",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "executorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{id}/close": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Завершение задачи",
        "operationId": "Issue_Close",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{issueId}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Получение задачи по ID",
        "operationId": "Issue_GetById",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses": {
      "post": {
        "tags": [
          "ManufacturingProcess"
        ],
        "summary": "Планирование производственного процесса",
        "operationId": "ManufacturingProcess_Schedule",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledManufacturingProcessCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ManufacturingProcess"
        ],
        "summary": "Получить все производственные процессы",
        "operationId": "ManufacturingProcess_GetAll",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          },
          {
            "name": "filterExpression",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "filterValues",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturingProcessResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses/{id}": {
      "get": {
        "tags": [
          "ManufacturingProcess"
        ],
        "operationId": "ManufacturingProcess_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturingProcessWithDetailsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses/{id}/launch": {
      "put": {
        "tags": [
          "ManufacturingProcess"
        ],
        "summary": "Запуск производственного процесса",
        "operationId": "ManufacturingProcess_Launch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses/{id}/complete": {
      "put": {
        "tags": [
          "ManufacturingProcess"
        ],
        "summary": "Завершение производственного процесса",
        "operationId": "ManufacturingProcess_Complete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-development": {
      "get": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Получение всех продуктов в разработке",
        "operationId": "ProductDevelopment_GetAll",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          },
          {
            "name": "filterExpression",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "filterValues",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "nullable": true
              }
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDevelopmentResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Заполнение состава продукта",
        "operationId": "ProductDevelopment_SetCompositionProduct",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompositionProductRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/product-development/issue/{issueId}": {
      "get": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Получение всех продуктов по ID задачи",
        "operationId": "ProductDevelopment_GetAllByIssueId",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 2
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDevelopmentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-development/issues/complete": {
      "put": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Завершить задачу, переход на следующий этап или создание готового продукта",
        "operationId": "ProductDevelopment_CompleteIssue",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteIssueRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/product-development/{productDevelopmentId}/composition": {
      "get": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Получение состава продукта по ProductDevelopmentId",
        "operationId": "ProductDevelopment_GetCompositionProduct",
        "parameters": [
          {
            "name": "productDevelopmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompositionProductGroupModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-development/{productDevelopmentId}/techcard-items": {
      "get": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Получение состава тех.карты по ProductDevelopmentId",
        "operationId": "ProductDevelopment_GetTechCardItemsByProductDevelopmentId",
        "parameters": [
          {
            "name": "productDevelopmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturing-order": {
      "get": {
        "tags": [
          "ManufacturingOrder"
        ],
        "summary": "Получить все заказы в производство",
        "operationId": "ManufacturingOrder_GetAll",
        "parameters": [
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Priority",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ManufacturingOrderStatusValue",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfManufacturingOrderModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ManufacturingOrder"
        ],
        "summary": "Создать заказ в производство",
        "operationId": "ManufacturingOrder_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManufacturingOrderRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturing-order/{id}": {
      "put": {
        "tags": [
          "ManufacturingOrder"
        ],
        "summary": "Добавить комментарий к заказу в производство",
        "operationId": "ManufacturingOrder_ChangeComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCommentManufacturingOrderRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ManufacturingOrder"
        ],
        "summary": "Получить заказ в производство по ID",
        "operationId": "ManufacturingOrder_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturingOrderModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturing-order-composition": {
      "post": {
        "tags": [
          "ManufacturingOrderComposition"
        ],
        "summary": "Добавить тех.карту в заказ на производство",
        "operationId": "ManufacturingOrderComposition_Add",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddManufacturingOrderCompositionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturing-order-composition/{id}": {
      "put": {
        "tags": [
          "ManufacturingOrderComposition"
        ],
        "summary": "Изменить количество продукта в составе заказа на производство",
        "operationId": "ManufacturingOrderComposition_ChangeQuantity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeQuantityManufacturingOrderCompositionRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManufacturingOrderComposition"
        ],
        "summary": "Удалить продукт из состава заказа на производство",
        "operationId": "ManufacturingOrderComposition_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ManufacturingOrderComposition"
        ],
        "summary": "Получить состав заказа в производство",
        "operationId": "ManufacturingOrderComposition_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturingOrderCompositionModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturing-order-composition/{manufacturingOrderId}/tracking-products": {
      "get": {
        "tags": [
          "ManufacturingOrderComposition"
        ],
        "operationId": "ManufacturingOrderComposition_GetTrackingProducts",
        "parameters": [
          {
            "name": "manufacturingOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nofitications-for-users": {
      "get": {
        "tags": [
          "NotificationForUsers"
        ],
        "summary": "Получить все уведомления для пользователей",
        "operationId": "NotificationForUsers_GetAll",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationForUsersModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NotificationForUsers"
        ],
        "summary": "Добавить уведомление для пользователей",
        "operationId": "NotificationForUsers_Publish",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationForUsersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/application-notifications": {
      "get": {
        "tags": [
          "ApplicationNotification"
        ],
        "summary": "Получить все типы уведомлений в приложении.",
        "operationId": "ApplicationNotification_GetAllApplicationNotifications",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationNotification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/application-user-notifications/{userId}": {
      "get": {
        "tags": [
          "ApplicationUserNotification"
        ],
        "summary": "Получить все подписки пользователя на уведомления.",
        "operationId": "ApplicationUserNotification_GetApplicationNotificationsByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationUserNotification"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/application-user-notifications": {
      "post": {
        "tags": [
          "ApplicationUserNotification"
        ],
        "summary": "Подписать пользователя на уведомление.",
        "operationId": "ApplicationUserNotification_SubscribeUserToNotification",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeUserToNotificationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/application-user-notifications/{id}": {
      "delete": {
        "tags": [
          "ApplicationUserNotification"
        ],
        "summary": "Отписать пользователя от уведомления.",
        "operationId": "ApplicationUserNotification_UnsubscribeUserFromNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/files": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Добавление файла",
        "operationId": "File_UploadFile",
        "parameters": [
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/download/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Скачивание файла с сервера",
        "operationId": "File_DownloadFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadFileResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{id}": {
      "delete": {
        "tags": [
          "File"
        ],
        "summary": "Удаление файла из БД",
        "operationId": "File_DeleteFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{parentId}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Получение списка файлов по родительскому идентификатору",
        "operationId": "File_GetAllFiles",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/price-list": {
      "post": {
        "tags": [
          "PriceList"
        ],
        "summary": "Добавление позиции в прайс-лист",
        "operationId": "PriceList_Add",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PriceList"
        ],
        "summary": "Получение всех позиций прайс-листа",
        "operationId": "PriceList_GetAll",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueTupleOfIReadOnlyCollectionOfPriceListModelAndInteger"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issue-history": {
      "get": {
        "tags": [
          "IssueHistory"
        ],
        "summary": "Получение истории задач",
        "operationId": "IssueHistory_GetAll",
        "parameters": [
          {
            "name": "ExecutorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ResponsibleId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueHistoryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/number/{number}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Получить счет по его номеру",
        "operationId": "Invoice_GetByNumber",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Получить счет по ID",
        "operationId": "Invoice_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Удалить счет по его id",
        "operationId": "Invoice_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Получить все счета",
        "operationId": "Invoice_GetAll",
        "parameters": [
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ContractorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "DateShipment",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "DateClosing",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Priority",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "InvoiceStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 8
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfInvoiceModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Создать счет",
        "operationId": "Invoice_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}/payment-status": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Изменить статус оплаты счета",
        "operationId": "Invoice_ChangePaymentStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStatusRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices/{id}/priority": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Изменить приоритет счета",
        "operationId": "Invoice_ChangePriority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriorityRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices/{id}/ship": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Отгрузить счет",
        "operationId": "Invoice_ShipInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateShipmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices/{id}/payment-percentage": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Изменить процент оплаты",
        "operationId": "Invoice_SetPaymentPercentage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPercentageRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices/{id}/change-logs": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Получить изменения в счете по ID",
        "operationId": "Invoice_GetChangeLogsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfChangeHistoryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}/change-description": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Изменить описание счета",
        "operationId": "Invoice_ChangeDescriptionInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDescriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices/{id}/set-closing-date": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Установить дату закрытия счета",
        "operationId": "Invoice_SetClosingDate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetClosingDateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoice-products": {
      "post": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Добавление продуктов в счет",
        "operationId": "InvoiceProduct_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceProductRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoice-products/{id}": {
      "get": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Получение продуктов по id счета",
        "operationId": "InvoiceProduct_GetCompositionInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceWithProductsModel"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Удалить продукт из счета",
        "operationId": "InvoiceProduct_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoice-products/composition": {
      "post": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Заполнение состава счета",
        "operationId": "InvoiceProduct_SetCompositionInvoice",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompositionInvoiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoice-products/{invoiceId}/composition": {
      "get": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Получение состава счета",
        "operationId": "InvoiceProduct_GetCompositionInvoice2",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompositionInvoiceModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice-products/{id}/change-quantity": {
      "put": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Изменить количество продукта в счете",
        "operationId": "InvoiceProduct_ChangeQuantityProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeQuantityRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/techcards/composition/{techCardId}": {
      "get": {
        "tags": [
          "TechCard"
        ],
        "summary": "Получение состава тех.карты по Id",
        "operationId": "TechCard_GetCompositionTechCard",
        "parameters": [
          {
            "name": "techCardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompositionTechCardModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techcards/{id}": {
      "get": {
        "tags": [
          "TechCard"
        ],
        "summary": "Получение тех.карты по Id",
        "operationId": "TechCard_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechCard"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TechCard"
        ],
        "summary": "Обновление информации о тех.карте",
        "operationId": "TechCard_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "card",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TechCard"
        ],
        "summary": "Удаление тех.карты",
        "operationId": "TechCard_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techcards": {
      "get": {
        "tags": [
          "TechCard"
        ],
        "summary": "Получение всех тех.карт",
        "operationId": "TechCard_GetAll",
        "parameters": [
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfTechCardModel"
                }
              }
            }
          },
          "204": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "TechCard"
        ],
        "summary": "Создание тех.карты",
        "operationId": "TechCard_Create",
        "requestBody": {
          "x-name": "card",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/tech-card-operation/{techCardId}": {
      "get": {
        "tags": [
          "TechCardOperation"
        ],
        "summary": "Получение всех этапов по Id тех.карты",
        "operationId": "TechCardOperation_GetOperationsByTechCardId",
        "parameters": [
          {
            "name": "techCardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfTechCardOperationModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-operation": {
      "post": {
        "tags": [
          "TechCardOperation"
        ],
        "summary": "Добавление этапа в техкарту",
        "operationId": "TechCardOperation_Create",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardOperationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-operation/{id}": {
      "put": {
        "tags": [
          "TechCardOperation"
        ],
        "summary": "Обновление этапа в техкарте",
        "operationId": "TechCardOperation_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTechCardOperationRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TechCardOperation"
        ],
        "summary": "Удаление этапа",
        "operationId": "TechCardOperation_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-item/{techCardId}": {
      "get": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Получение состава тех.карты по TechCardId",
        "operationId": "TechCardItem_GetTechCardItems",
        "parameters": [
          {
            "name": "techCardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfTechCardItemModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-item": {
      "post": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Добавление компонента в техкарту",
        "operationId": "TechCardItem_Create",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardItemRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-item/{id}": {
      "put": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Обновление компонента в техкарте",
        "operationId": "TechCardItem_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardItemRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Удаление компонента из техкарты",
        "operationId": "TechCardItem_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storages": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "Создание нового склада",
        "operationId": "Storage_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Получить список всех складов",
        "operationId": "Storage_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageModel"
                  }
                }
              }
            }
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/storages/{id}": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "Обновление информации о складе",
        "operationId": "Storage_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "summary": "Удаление склада",
        "operationId": "Storage_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/role": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Создать новую роль",
        "operationId": "Role_Create",
        "requestBody": {
          "x-name": "name",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Получить все роли",
        "operationId": "Role_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/role/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Получить роль по id",
        "operationId": "Role_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Получение всех продуктов",
        "operationId": "Product_GetAll",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "CategoryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Purchased",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfProductModel"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Создать продукт",
        "operationId": "Product_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Обновление продукта по id",
        "operationId": "Product_Update",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Получение продукта по id",
        "operationId": "Product_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Удаление продукта",
        "operationId": "Product_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/barcode": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Получение QR-продукта. Содержит JSON с Id и Name продукта.",
        "operationId": "Product_GetBarcodePngs",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/barcode": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Добавить штрихкод продукта.",
        "operationId": "Product_UpdateBarcode",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-compatibilities": {
      "post": {
        "tags": [
          "ProductCompatibility"
        ],
        "summary": "Добавить совместимость для продукта",
        "operationId": "ProductCompatibility_AddProductCompatibility",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCompatibilityRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-compatibilities/{productId}": {
      "get": {
        "tags": [
          "ProductCompatibility"
        ],
        "summary": "Получить список совместимых продуктов",
        "operationId": "ProductCompatibility_GetProductCompatibilityByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCompatibilityModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-compatibilities/{productCompabilityId}": {
      "delete": {
        "tags": [
          "ProductCompatibility"
        ],
        "summary": "Удаление позиции",
        "operationId": "ProductCompatibility_DeleteProductCompabilityById",
        "parameters": [
          {
            "name": "productCompabilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-attributes": {
      "post": {
        "tags": [
          "ProductAttribute"
        ],
        "summary": "Добавление атрибута к продукту",
        "operationId": "ProductAttribute_CreateProductAttribute",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAttributeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-attributes/{productAttributeId}/values": {
      "put": {
        "tags": [
          "ProductAttribute"
        ],
        "summary": "Обновление значений атрибута",
        "operationId": "ProductAttribute_AddProductAttributeValues",
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAttributeValuesRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-attributes/{productId}": {
      "get": {
        "tags": [
          "ProductAttribute"
        ],
        "summary": "Получение всех атрибутов продукта",
        "operationId": "ProductAttribute_GetAllAttributesByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAttributeModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-attributes/{id}": {
      "delete": {
        "tags": [
          "ProductAttribute"
        ],
        "summary": "Удаление атрибута продукта",
        "operationId": "ProductAttribute_DeleteProductAttribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attributes/{attributeId}": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Получить атрибут по ID",
        "operationId": "Attribute_GetAttributeWithValue",
        "parameters": [
          {
            "name": "attributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attribute"
        ],
        "summary": "Удалить атрибут",
        "operationId": "Attribute_DeleteAttribute",
        "parameters": [
          {
            "name": "attributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attributes": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Получить все атрибуты",
        "operationId": "Attribute_GetAllAttributes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attribute"
        ],
        "summary": "Создать атрибут",
        "operationId": "Attribute_CreateAttribute",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attribute"
        ],
        "summary": "Изменить атрибут",
        "operationId": "Attribute_UpdateAttribute",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeWithValuesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attributes/{attributeId}/values": {
      "put": {
        "tags": [
          "Attribute"
        ],
        "summary": "Добавить значения к атрибуту",
        "operationId": "Attribute_AddValuesAttribute",
        "parameters": [
          {
            "name": "attributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeValuesRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operations": {
      "post": {
        "tags": [
          "Operation"
        ],
        "summary": "Добавление операции",
        "operationId": "Operation_Add",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Operation"
        ],
        "summary": "Получение всех операций",
        "operationId": "Operation_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Operation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operations/{id}/description": {
      "put": {
        "tags": [
          "Operation"
        ],
        "summary": "Изменить описание операции",
        "operationId": "Operation_ChangeOperationDescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperationDescriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/operations/{id}": {
      "delete": {
        "tags": [
          "Operation"
        ],
        "summary": "Удаление операции по ID",
        "operationId": "Operation_DeleteOperation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Operation"
        ],
        "summary": "Получить операцию по ID",
        "operationId": "Operation_GetOperationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Получить список всех сотрудников",
        "operationId": "Employee_GetAll",
        "parameters": [
          {
            "name": "Lastname",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfEmployeeWithRoleModel"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Обновление информации о сотруднике",
        "operationId": "Employee_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Удаление сотрудника",
        "operationId": "Employee_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{id}/password": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Обновление пароля пользователя",
        "operationId": "Employee_UpdatePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors": {
      "post": {
        "tags": [
          "Contractor"
        ],
        "summary": "Добавление контрагента",
        "operationId": "Contractor_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contractor"
        ],
        "summary": "Получить всех контрагентов",
        "operationId": "Contractor_GetAll",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ContractorTypeValue",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPagedResultOfContractorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors/{id}": {
      "get": {
        "tags": [
          "Contractor"
        ],
        "summary": "Получить контрагента по id",
        "operationId": "Contractor_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contractor"
        ],
        "summary": "Обновление контрагента",
        "operationId": "Contractor_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contractor"
        ],
        "summary": "Удаление контрагента",
        "operationId": "Contractor_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors/contractor-representatives": {
      "post": {
        "tags": [
          "Contractor"
        ],
        "summary": "Добавить представителя контрагента",
        "operationId": "Contractor_AddContractorRepresantativeByContractorId",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorRepresentativeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/contractors/{contractorId}/contractor-representatives": {
      "get": {
        "tags": [
          "Contractor"
        ],
        "summary": "Получить представителей контрагента",
        "operationId": "Contractor_GetContractorRepresentativeByContractorId",
        "parameters": [
          {
            "name": "contractorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorRepresentative"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors/contractor-representatives/{id}": {
      "delete": {
        "tags": [
          "Contractor"
        ],
        "summary": "Удалить представителя контрагента",
        "operationId": "Contractor_DeleteContractorRepresentativeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contractor"
        ],
        "summary": "Изменить представителя контрагента",
        "operationId": "Contractor_UpdateContractorRepresentativeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorRepresentativeRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Создание категории",
        "operationId": "Category_Add",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Получить все категории",
        "operationId": "Category_GetAll",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ParentCategoryId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryWithChildrenModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Обновление категории",
        "operationId": "Category_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Удаление категории",
        "operationId": "Category_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Регистрация сотрудника (регистрирует только админ)",
        "operationId": "Account_Register",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Логин сотрудника",
        "operationId": "Account_Login",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StorageProductModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "storageName": {
            "type": "string"
          },
          "storageId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "StorageProductCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "storageId": {
            "type": "string",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ScanBarcodeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "storageId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "barcode": {
            "type": "string"
          }
        }
      },
      "ValueTupleOfIReadOnlyCollectionOfEntryStorageHistoryModelAndInteger": {
        "type": "object",
        "additionalProperties": false
      },
      "CompletedProductModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "productDevelopmentId": {
            "type": "string",
            "format": "guid"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "IssueFromManufacturingProcessModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "issueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "executorId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatusModel"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCompositionFlag": {
            "type": "boolean"
          }
        }
      },
      "IssueStatusModel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Pending",
          "PendingPreviousIssue",
          "InProgress",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          100,
          101,
          200,
          300,
          400
        ]
      },
      "IssueModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "issueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "executorId": {
            "type": "string",
            "format": "guid"
          },
          "executorName": {
            "type": "string"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "targetQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCompositionFlag": {
            "type": "boolean"
          }
        }
      },
      "ScheduledManufacturingProcessCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "technologicalCardId": {
            "type": "string",
            "format": "guid"
          },
          "batchNumber": {
            "type": "string"
          },
          "targetQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledIssue"
            }
          }
        }
      },
      "ScheduledIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stepId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productCompositionSettingFlag": {
            "type": "boolean"
          }
        }
      },
      "ManufacturingProcessWithDetailsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "techCardNumber": {
            "type": "string"
          },
          "batchNumber": {
            "type": "string"
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "targetQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ManufacturingProcessStatusModel"
          }
        }
      },
      "ManufacturingProcessStatusModel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Pending",
          "InPaused",
          "InProgress",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          100,
          101,
          200,
          300,
          400
        ]
      },
      "ManufacturingProcessResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "techCardNumber": {
            "type": "string"
          },
          "batchNumber": {
            "type": "string",
            "description": "Номер партии"
          },
          "currentQuantity": {
            "type": "integer",
            "description": "Текущее количество продукта из производственного процесса",
            "format": "int32"
          },
          "targetQuantity": {
            "type": "integer",
            "description": "Целевое количество продукта в производственном процессе",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "description": "Дата начала выполнения производственного процесса",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "description": "Дата завершения выполнения производственного процесса",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ManufacturingProcessStatus"
          }
        }
      },
      "ManufacturingProcessStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Pending",
          "InPaused",
          "InProgress",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          100,
          101,
          200,
          300,
          400
        ]
      },
      "ProductDevelopmentResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "manufacturingProcessId": {
            "type": "string",
            "format": "guid"
          },
          "batchNumber": {
            "type": "string"
          },
          "issueId": {
            "type": "string",
            "description": "ID задачи, где находится продукт",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string",
            "description": "Серийный номер продукта"
          },
          "settingOption": {
            "description": "Вариант настройки",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SettingOption"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/ProductStatus"
          }
        }
      },
      "SettingOption": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "ЗВУ",
          "R",
          "ВДК",
          "Триада",
          "DC_DC"
        ],
        "enum": [
          100,
          200,
          300,
          400,
          500
        ]
      },
      "ProductStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Initial",
          "InPaused",
          "InProgress",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          100,
          101,
          200,
          300,
          400
        ]
      },
      "CompleteIssueRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productDevelopmentIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "CompositionProductRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productDevelopmentId": {
            "type": "string",
            "description": "Продукт относительно которого заполняем состав",
            "format": "guid"
          },
          "completedProductsId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "CompositionProductGroupModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productDevelopmentId": {
            "type": "string",
            "format": "guid"
          },
          "parentProductName": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "completedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompletedProductCompositionModel"
            }
          }
        }
      },
      "CompletedProductCompositionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "completedProductId": {
            "type": "string",
            "format": "guid"
          },
          "itemName": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "EntityPagedResultOfManufacturingOrderModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManufacturingOrderModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ManufacturingOrderModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "manufacturingOrderStatus": {
            "$ref": "#/components/schemas/ManufacturingOrderStatus"
          }
        }
      },
      "Priority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfPriority"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfPriority": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ManufacturingOrderStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfManufacturingOrderStatus"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfManufacturingOrderStatus": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateManufacturingOrderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ChangeCommentManufacturingOrderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string"
          }
        }
      },
      "AddManufacturingOrderCompositionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "manufacturingOrderId": {
            "type": "string",
            "format": "guid"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChangeQuantityManufacturingOrderCompositionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ManufacturingOrderCompositionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "manufacturingProcessOrderId": {
            "type": "string",
            "format": "guid"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "techCardNumber": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NotificationForUsersModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "message": {
            "type": "string"
          },
          "authorName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "NotificationForUsersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ApplicationNotification": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "notificationName": {
            "type": "string"
          }
        }
      },
      "ApplicationUserNotification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "userId": {
                "type": "string",
                "format": "guid"
              },
              "notificationId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "DomainEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SubscribeUserToNotificationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "notificationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DownloadFileResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileContent": {
            "type": "string",
            "format": "byte"
          },
          "contentType": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "FilesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "parentId": {
            "type": "string",
            "format": "guid"
          },
          "fileContent": {
            "type": "string",
            "format": "byte"
          },
          "contentType": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "PriceListRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "operationId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "price": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ValueTupleOfIReadOnlyCollectionOfPriceListModelAndInteger": {
        "type": "object",
        "additionalProperties": false
      },
      "IssueHistoryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productDevelopmentId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "issueId": {
            "type": "string",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "completionDate": {
            "type": "string",
            "format": "date-time"
          },
          "executorId": {
            "type": "string",
            "format": "guid"
          },
          "executorName": {
            "type": "string"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleName": {
            "type": "string"
          }
        }
      },
      "Invoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "number": {
                "type": "string"
              },
              "contractorId": {
                "type": "string",
                "format": "guid"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "paymentPercentage": {
                "type": "number",
                "format": "decimal"
              },
              "createDate": {
                "type": "string",
                "format": "date-time"
              },
              "paymentDeadline": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateShipment": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateClosing": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "priority": {
                "$ref": "#/components/schemas/Priority"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/PaymentStatus"
              },
              "invoiceStatus": {
                "$ref": "#/components/schemas/InvoiceStatus"
              },
              "isManufacturingOrderSent": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "PaymentStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfPaymentStatus"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfPaymentStatus": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "InvoiceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfInvoiceStatus"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfInvoiceStatus": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AggregateRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainAuditableEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "domainEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IDomainEvent"
                }
              }
            }
          }
        ]
      },
      "IDomainEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "DomainAuditableEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "createdById": {
                "type": "string",
                "format": "guid"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedById": {
                "type": "string",
                "format": "guid"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "deletedById": {
                "type": "string",
                "format": "guid",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvoiceModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "contractorId": {
            "type": "string",
            "format": "guid"
          },
          "contragentName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "paymentPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "isManufacturingOrderSent": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateShipment": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateClosing": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "invoiceStatus": {
            "$ref": "#/components/schemas/InvoiceStatus"
          }
        }
      },
      "EntityPagedResultOfInvoiceModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceCreateRequest": {
        "type": "object",
        "description": "Модель запроса на создание счета",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string"
          },
          "contractorId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "paymentStatus": {
            "type": "integer",
            "format": "int32"
          },
          "paymentDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceProductCreate"
            }
          }
        }
      },
      "InvoiceProductCreate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaymentStatusRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paymentStatusValue": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PriorityRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priorityValue": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DateShipmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shipmentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaymentPercentageRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paymentPercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "EntityPagedResultOfChangeHistoryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeHistoryModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChangeHistoryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "entityId": {
            "type": "string",
            "format": "guid"
          },
          "entityName": {
            "type": "string"
          },
          "propertyName": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedById": {
            "type": "string",
            "format": "guid"
          },
          "updatedByName": {
            "type": "string"
          }
        }
      },
      "ChangeDescriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "SetClosingDateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "closingDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InvoiceProductRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceWithProductsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CompositionInvoiceRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "completedProductIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "CompositionInvoiceModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "completedProductId": {
            "type": "string",
            "format": "guid"
          },
          "productDevelopmentId": {
            "type": "string",
            "format": "guid"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "ChangeQuantityRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CompositionTechCardModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "operations": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OperationSummary"
            }
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ItemSummary"
            }
          }
        }
      },
      "OperationSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "operationId": {
            "type": "string",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/OperationType"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OperationType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfOperationType"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfOperationType": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ItemSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "number": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "productId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "EntityPagedResultOfTechCardModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechCardModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCardModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          }
        }
      },
      "TechCardCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер тех.карты\n            "
          },
          "description": {
            "type": "string",
            "description": "Описание\n            ",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "description": "Ссылка на продукт, относительно которого составляется тех.карта\n            ",
            "format": "guid"
          }
        }
      },
      "EntityPagedResultOfTechCardOperationModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechCardOperationModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCardOperationModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "techCardNumber": {
            "type": "string"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "operationId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCardOperationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "operationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UpdateTechCardOperationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "operationId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EntityPagedResultOfTechCardItemModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechCardItemModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCardItemModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCardItemRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "description": "Ссылка на продукт, из которого состоит целевой продукт в тех.карте\n            ",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "description": "Необходимое количество, для создания единицы целевого продукта\n            ",
            "format": "int32"
          }
        }
      },
      "StorageCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "StorageModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "storageId": {
            "type": "string",
            "format": "guid"
          },
          "storageName": {
            "type": "string"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleName": {
            "type": "string"
          }
        }
      },
      "Role": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "RoleResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "EntityPagedResultOfProductModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "purchased": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "categoryName": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProductCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "purchased": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProductUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "purchased": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "BarcodeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "barcode": {
            "type": "string"
          }
        }
      },
      "ProductCompatibilityRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "parentProductId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProductCompatibilityModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "parentProductId": {
            "type": "string",
            "format": "guid"
          },
          "parentProductName": {
            "type": "string"
          }
        }
      },
      "ProductAttributeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "attributeId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProductAttributeValuesRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductAttributeModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "attributeId": {
            "type": "string",
            "format": "guid"
          },
          "attributeName": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AttributeModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AttributeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AttributeValuesRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attributeValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AttributeWithValuesRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "operationTypeValue": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OperationDescriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "$ref": "#/components/schemas/OperationType"
              }
            }
          }
        ]
      },
      "EntityPagedResultOfEmployeeWithRoleModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeWithRoleModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeWithRoleModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "post": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "roleId": {
            "type": "string",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "EmployeeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Имя сотрудника"
          },
          "lastName": {
            "type": "string",
            "description": "Фамилия сотрудника"
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество сотрудника",
            "nullable": true
          },
          "post": {
            "type": "string",
            "description": "Должность сотрудника"
          },
          "roleId": {
            "type": "string",
            "description": "Id на роль в приложении",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "description": "Почта сотрудника",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Номер телефона сотрудника"
          }
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "ContractorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя контрагента"
          },
          "inn": {
            "type": "string",
            "description": "ИНН"
          },
          "country": {
            "type": "string",
            "description": "Страна контрагента"
          },
          "city": {
            "type": "string",
            "description": "Город контрагента"
          },
          "description": {
            "type": "string",
            "description": "Любая информация по контрагенту",
            "nullable": true
          },
          "discountLevel": {
            "type": "number",
            "description": "Уровень дисконта",
            "format": "decimal",
            "nullable": true
          },
          "logisticInfo": {
            "type": "string",
            "description": "Информация по логистике",
            "nullable": true
          },
          "contractorType": {
            "type": "integer",
            "description": "Тип контрагента",
            "format": "int32"
          }
        }
      },
      "EntityPagedResultOfContractorModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractorModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ContractorModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "inn": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountLevel": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "logisticInfo": {
            "type": "string",
            "nullable": true
          },
          "contractorType": {
            "$ref": "#/components/schemas/ContractorType"
          }
        }
      },
      "ContractorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfContractorType"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfContractorType": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ContractorRepresentativeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contractorId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "post": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContractorRepresentative": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contractorId": {
                "type": "string",
                "format": "guid"
              },
              "name": {
                "type": "string"
              },
              "post": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentCategoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "CategoryWithChildrenModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentCategoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryWithChildrenModel"
            }
          }
        }
      },
      "RegisterUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "post": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}