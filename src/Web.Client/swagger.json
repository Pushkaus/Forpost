{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/issues/{manufacturingProcessId}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Получение всех задач производственного процесса",
        "operationId": "GetIssuesFromManufacturingProcess",
        "parameters": [
          {
            "name": "manufacturingProcessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueFromManufacturingProcess"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{id}/launch": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Запуск задачи",
        "operationId": "Launch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{issueId}/assign-executor": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Назначение исполнителя задачи",
        "operationId": "AssignExecutor",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "executorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{id}/close": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Завершение задачи",
        "operationId": "Close",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses": {
      "post": {
        "tags": [
          "ManufacturingProcess"
        ],
        "operationId": "Schedule",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledManufacturingProcessCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses/launch/{id}": {
      "put": {
        "tags": [
          "ManufacturingProcess"
        ],
        "operationId": "Launch2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/manufacturingProcesses/complete/{id}": {
      "put": {
        "tags": [
          "ManufacturingProcess"
        ],
        "operationId": "Complete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-development": {
      "get": {
        "tags": [
          "ProductDevelopment"
        ],
        "summary": "Получение всех продуктов в разработке",
        "operationId": "GetAllAll",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDevelopment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/number/{number}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Получить счет по его номеру",
        "operationId": "GetByNumber",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Получить все счета",
        "operationId": "GetAllAll2",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Список счетов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Список счетов"
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Создать счет",
        "operationId": "Expose",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/ship/{invoiceId}": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Закрытие счета, смена статуса и выставление даты отгрузки",
        "operationId": "Ship",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "shipDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoices/{id}": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Обновление счета",
        "operationId": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Удалить счет по его id",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoice-products": {
      "post": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Добавление продуктов в счет",
        "operationId": "Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceProductRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/invoice-products/{id}": {
      "get": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Получение продуктов по id счета",
        "operationId": "GetCompositionInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceProductResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techcard/composition/{techCardId}": {
      "get": {
        "tags": [
          "TechCard"
        ],
        "summary": "Получение состава тех.карты по Id",
        "operationId": "GetCompositionTechCard",
        "parameters": [
          {
            "name": "techCardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompositionTechCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techcard/{id}": {
      "get": {
        "tags": [
          "TechCard"
        ],
        "summary": "Получение тех.карты по Id",
        "operationId": "GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechCard"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TechCard"
        ],
        "summary": "Удаление тех.карты",
        "operationId": "Delete2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/techcard": {
      "get": {
        "tags": [
          "TechCard"
        ],
        "summary": "Получение всех тех.карт",
        "operationId": "GetAllAll3",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Список тех.карт и общее количество",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechCard"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Список тех.карт и общее количество"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TechCard"
        ],
        "summary": "Создание тех.карты",
        "operationId": "Create2",
        "requestBody": {
          "x-name": "card",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-step/{techCardId}": {
      "get": {
        "tags": [
          "TechCardStep"
        ],
        "summary": "Получение всех этапов по Id тех.карты",
        "operationId": "GetStepsByTechCardId",
        "parameters": [
          {
            "name": "techCardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechCardStep"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-step": {
      "post": {
        "tags": [
          "TechCardStep"
        ],
        "summary": "Добавление этапа в тех.карту",
        "operationId": "Create3",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardStepRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-step/{id}": {
      "delete": {
        "tags": [
          "TechCardStep"
        ],
        "summary": "Удаление этапа",
        "operationId": "Delete3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/tech-card-item/{techCardId}": {
      "get": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Получение состава тех.карты по TechCardId",
        "operationId": "GetTechCardItems",
        "parameters": [
          {
            "name": "techCardId",
            "in": "path",
            "required": true,
            "description": "id тех.карты",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechCardItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-item": {
      "post": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Добавления компонента в тех.карту",
        "operationId": "Create4",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechCardItemRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tech-card-item/{id}": {
      "delete": {
        "tags": [
          "TechCardItem"
        ],
        "summary": "Удаление компонента из тех.карты",
        "operationId": "Delete4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/storages": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "Создание нового склада",
        "operationId": "Create5",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Получить список всех складов",
        "operationId": "GetAllAll4",
        "responses": {
          "200": {
            "description": "Список складов и общее количество",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Storage"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Список складов и общее количество"
          }
        }
      }
    },
    "/api/v1/steps/{id}": {
      "get": {
        "tags": [
          "Step"
        ],
        "summary": "Получение этапа по Id",
        "operationId": "GetById2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Step"
        ],
        "summary": "Удаление этапа",
        "operationId": "Delete5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/steps": {
      "get": {
        "tags": [
          "Step"
        ],
        "summary": "Получение всех этапов",
        "operationId": "GetAllAll5",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Step"
        ],
        "summary": "Создание этапа",
        "operationId": "Create6",
        "requestBody": {
          "x-name": "step",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StepCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/role": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Создать новую роль",
        "operationId": "Create7",
        "requestBody": {
          "x-name": "name",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Получить все роли",
        "operationId": "GetAllAll6",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/role/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Получить роль по id",
        "operationId": "GetById3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Получение всех продуктов",
        "operationId": "GetAll",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Список продуктов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueTupleOfIReadOnlyCollectionOfProductResponseAndInteger"
                }
              }
            }
          },
          "204": {
            "description": "Список продуктов"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Создать продукт",
        "operationId": "Create8",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Обновление продукта по id",
        "operationId": "Update2",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Получение продукта по id",
        "operationId": "GetById4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Удаление продукта по id",
        "operationId": "Delete6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/operations": {
      "post": {
        "tags": [
          "Operation"
        ],
        "summary": "Добавление операции",
        "operationId": "Add",
        "requestBody": {
          "x-name": "operationName",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Operation"
        ],
        "summary": "Получение всех операций",
        "operationId": "GetAllAll7",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Operation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Получить список всех сотрудников",
        "operationId": "GetAll2",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Список сотрудников и общее количество",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueTupleOfIReadOnlyCollectionOfEmployeeResponseAndInteger"
                }
              }
            }
          },
          "204": {
            "description": "Список сотрудников и общее количество"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors": {
      "post": {
        "tags": [
          "Contractor"
        ],
        "summary": "Добавление контрагента",
        "operationId": "Create9",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Contractor"
        ],
        "summary": "Получить всех контрагентов",
        "operationId": "GetAllAll8",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Список контрагентов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractorResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Список контрагентов"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contractors/{id}": {
      "get": {
        "tags": [
          "Contractor"
        ],
        "summary": "Получить контрагента по id",
        "operationId": "GetById5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Регистрация сотрудника (регистрирует только админ)",
        "operationId": "Register",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Логин сотрудника",
        "operationId": "Login",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IssueFromManufacturingProcess": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "issueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "executorId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatusModel"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "IssueStatusModel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Pending",
          "PendingPreviousIssue",
          "InProgress",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          100,
          101,
          200,
          300,
          400
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ScheduledManufacturingProcessCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "technologicalCardId": {
            "type": "string",
            "format": "guid"
          },
          "batchNumber": {
            "type": "string"
          },
          "targetQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledIssue"
            }
          }
        }
      },
      "ScheduledIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stepId": {
            "type": "string",
            "format": "guid"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productCompositionSettingFlag": {
            "type": "boolean"
          }
        }
      },
      "ProductDevelopment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "productId": {
                "type": "string",
                "format": "guid"
              },
              "manufacturingProcessId": {
                "type": "string",
                "format": "guid"
              },
              "issueId": {
                "type": "string",
                "format": "guid"
              },
              "serialNumber": {
                "type": "string"
              },
              "settingOption": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SettingOption"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/ProductStatus"
              }
            }
          }
        ]
      },
      "SettingOption": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "ЗВУ",
          "R",
          "ВДК",
          "Триада",
          "DC_DC"
        ],
        "enum": [
          100,
          200,
          300,
          400,
          500
        ]
      },
      "ProductStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Initial",
          "InPaused",
          "InProgress",
          "Completed",
          "Cancelled"
        ],
        "enum": [
          100,
          101,
          200,
          300,
          400
        ]
      },
      "DomainEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "Invoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "number": {
                "type": "string"
              },
              "contractorId": {
                "type": "string",
                "format": "guid"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "paymentPercentage": {
                "type": "number",
                "format": "decimal"
              },
              "daysShipment": {
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "$ref": "#/components/schemas/InvoiceStatus"
              },
              "dateShipment": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvoiceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfInvoiceStatus"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfInvoiceStatus": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AggregateRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainAuditableEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "domainEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IDomainEvent"
                }
              }
            }
          }
        ]
      },
      "IDomainEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "DomainAuditableEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "createdById": {
                "type": "string",
                "format": "guid"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedById": {
                "type": "string",
                "format": "guid"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "deletedById": {
                "type": "string",
                "format": "guid",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvoiceCreateRequest": {
        "type": "object",
        "description": "Модель запроса на создание счета",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string"
          },
          "contragentId": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "daysShipment": {
            "type": "integer",
            "format": "int32"
          },
          "paymentPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceProduct"
            }
          }
        }
      },
      "InvoiceProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "invoiceId": {
                "type": "string",
                "format": "guid"
              },
              "productId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "InvoiceUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "contractorId": {
            "type": "string",
            "format": "guid"
          },
          "issueStatus": {
            "$ref": "#/components/schemas/IssueStatus"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "daysShipment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentPercentage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateShipment": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "IssueStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SmartEnumerationOfIssueStatus"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SmartEnumerationOfIssueStatus": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "InvoiceProductRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceProductResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CompositionTechCardResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "steps": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StepSummaryResponse"
            }
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ItemSummaryResponse"
            }
          }
        }
      },
      "StepSummaryResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "operationName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "format": "duration"
          },
          "cost": {
            "type": "number",
            "format": "decimal"
          },
          "unitOfMeasure": {
            "$ref": "#/components/schemas/UnitOfMeasure"
          }
        }
      },
      "UnitOfMeasure": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Piece"
        ],
        "enum": [
          1
        ]
      },
      "ItemSummaryResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TechCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AggregateRoot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "number": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "productId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "TechCardCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер тех.карты\n            "
          },
          "description": {
            "type": "string",
            "description": "Описание\n            ",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "description": "Ссылка на продукт, относительно которого составляется тех.карта\n            ",
            "format": "guid"
          },
          "createdById": {
            "type": "string",
            "description": "Создатель тех.карты\n            ",
            "format": "guid"
          }
        }
      },
      "TechCardStep": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "techCardId": {
                "type": "string",
                "format": "guid"
              },
              "stepId": {
                "type": "string",
                "format": "guid"
              },
              "number": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "TechCardStepRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "stepId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "description": "Номер в очереди\n            ",
            "format": "int32"
          }
        }
      },
      "TechCardItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "techCardId": {
                "type": "string",
                "format": "guid"
              },
              "productId": {
                "type": "string",
                "format": "guid"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "TechCardItemRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "description": "Ссылка на продукт, из которого состоит целевой продукт в тех.карте\n            ",
            "format": "guid"
          },
          "quantity": {
            "type": "integer",
            "description": "Необходимое количество, для создания единицы целевого продукта\n            ",
            "format": "int32"
          }
        }
      },
      "StorageCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "responsibleId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "Storage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "responsibleId": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "Step": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "techCardId": {
                "type": "string",
                "format": "guid"
              },
              "operationId": {
                "type": "string",
                "format": "guid"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "duration": {
                "type": "string",
                "format": "duration"
              },
              "cost": {
                "type": "number",
                "format": "decimal"
              },
              "unitOfMeasure": {
                "$ref": "#/components/schemas/UnitOfMeasure"
              }
            }
          }
        ]
      },
      "StepCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "techCardId": {
            "type": "string",
            "description": "Ссылка на тех.карту\n            ",
            "format": "guid"
          },
          "operationId": {
            "type": "string",
            "description": "Ссылка на операцию (пайка/мойка/сборка и тд)\n            ",
            "format": "guid"
          },
          "description": {
            "type": "string",
            "description": "Описание задачи\n            ",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "Длительность задачи\n            ",
            "format": "duration"
          },
          "cost": {
            "type": "number",
            "description": "Стоимость задачи\n            ",
            "format": "decimal"
          },
          "unitOfMeasure": {
            "description": "Единица измерения\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UnitOfMeasure"
              }
            ]
          }
        }
      },
      "RoleResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ValueTupleOfIReadOnlyCollectionOfProductResponseAndInteger": {
        "type": "object",
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "categoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "string",
            "format": "guid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedById": {
            "type": "string",
            "format": "guid"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedById": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "ProductCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "type": {
                "$ref": "#/components/schemas/OperationType"
              }
            }
          }
        ]
      },
      "OperationType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Preparatory",
          "Basic"
        ],
        "enum": [
          100,
          200
        ]
      },
      "ValueTupleOfIReadOnlyCollectionOfEmployeeResponseAndInteger": {
        "type": "object",
        "additionalProperties": false
      },
      "ContractorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ContractorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "RegisterUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "post": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}