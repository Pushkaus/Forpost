services:
  db:
    container_name: 'ErpDatabase'
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: ErpDatabase
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ErpDatabase -U postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data 

  back:
    container_name: 'ForpostApi'
    command: ["dotnet", "Forpost.Host.dll", "--with-schema-migration", "--with-data-migration"]
    depends_on:
      db:
        condition: service_healthy
      seq:
        condition: service_started
    build:
      dockerfile: Web.Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
#  front:
#    container_name: 'ForpostFrontend'
#    build:
#      context: ../Frontend
#      dockerfile: Dockerfile
#    restart: always
#    pull_policy: always
#    env_file:
#      - ../Frontend/.env
#    ports:
#      - 5173:5173
#      
  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      ACCEPT_EULA: "Y"
    restart: unless-stopped
    volumes:
      - ./seq-data:/data

volumes:
  postgres_data: 
